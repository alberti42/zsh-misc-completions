#compdef pytr

# AUTOMATICALLY GENERATED by `shtab`

_shtab_pytr_commands() {
  local _commands=(
    "completion:Print shell tab completion"
    "details:Get details for an ISIN"
    "dl_docs:Download all pdf documents from the timeline and sort them into folders. Also export account transactions (account_transactions.csv) and JSON files with all events (events_with_documents.json and other_events.json"
    "export_transactions:Create a CSV with the deposits and removals ready for importing into Portfolio Performance"
    "get_price_alarms:Get overview of current price alarms"
    "help:Print help message"
    "login:Check if credentials file exists. If not create it and ask for input. Try to login. Ask for device reset if needed"
    "portfolio:Show current portfolio"
    "set_price_alarms:Set price alarms based on diff from current price"
  )
  _describe 'pytr commands' _commands
}

_shtab_pytr_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-v,--verbosity}"[Set verbosity level (default\: info)]:verbosity:(warning info debug)"
  {-V,--version}"[Print version information and quit]"
)

_shtab_pytr_completion_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  ":print shell completion script:(bash zsh tcsh)"
  ":print shell completion script (default\: bash):(bash zsh tcsh)"
)

_shtab_pytr_details_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
  ":ISIN of intrument:"
)

_shtab_pytr_dl_docs_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
  "--format[available variables\:	iso_date, time, title, doc_num, subtitle, id]:format:"
  "--last_days[Number of last days to include (use 0 get all days)]:last_days:"
  "--workers[Number of workers for parallel downloading]:workers:"
  "--universal[Platform independent file names]"
  ":Output directory:"
)

_shtab_pytr_export_transactions_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-l,--lang}"[Two letter language code or \"auto\" for system language]:lang:"
  ":Input path to JSON (use other_events.json from dl_docs):"
  ":Output path of CSV file:"
)

_shtab_pytr_get_price_alarms_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
)

_shtab_pytr_help_options=(
  
)

_shtab_pytr_login_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
)

_shtab_pytr_portfolio_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
)

_shtab_pytr_set_price_alarms_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--applogin[Use app login instead of  web login]"
  {-n,--phone_no}"[TradeRepbulic phone number (international format)]:phone_no:"
  {-p,--pin}"[TradeRepbulic pin]:pin:"
  {-%,--percent}"[Percentage \+\/-]:percent:"
)


_shtab_pytr() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_pytr_options[(I)${(q)one_or_more}*]} + ${_shtab_pytr_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_pytr_options+=(': :_shtab_pytr_commands' '*::: :->pytr')
  fi
  _arguments -C -s $_shtab_pytr_options

  case $state in
    pytr)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_pytr-$line[1]:"
      case $line[1] in
        completion) _arguments -C -s $_shtab_pytr_completion_options ;;
        details) _arguments -C -s $_shtab_pytr_details_options ;;
        dl_docs) _arguments -C -s $_shtab_pytr_dl_docs_options ;;
        export_transactions) _arguments -C -s $_shtab_pytr_export_transactions_options ;;
        get_price_alarms) _arguments -C -s $_shtab_pytr_get_price_alarms_options ;;
        help) _arguments -C -s $_shtab_pytr_help_options ;;
        login) _arguments -C -s $_shtab_pytr_login_options ;;
        portfolio) _arguments -C -s $_shtab_pytr_portfolio_options ;;
        set_price_alarms) _arguments -C -s $_shtab_pytr_set_price_alarms_options ;;
      esac
  esac
}

typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_pytr -N pytr
else
  # autoload from fpath, call function directly
  _shtab_pytr "$@"
fi

